{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","e","window","open","stopPropagation","console","log","splice","prompt","indexOf","push","logoType","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.dc19883a.map","sourceRoot":"..\\src","sourcesContent":["const $siteList = $('.siteList')\r\nconst $lastLi = $siteList.find('li.last')\r\nconst x = localStorage.getItem('x')\r\nconst xObject = JSON.parse(x)//把字符串变成对象\r\nconst hashMap = xObject || [\r\n    { logo: 'A', url: 'https://www.acfun.cn' },\r\n    { logo: 'B', url: 'https://www.bilibili.com' }\r\n]\r\nconst simplifyUrl = (url)=>{\r\n    return url.replace('https://','')\r\n    .replace('http://','')\r\n    .replace('www.','')\r\n    .replace(/\\/.*/,'')  //正则表达式--删除/开头的内容 \r\n}\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove() //找到ul里面的所有li.唯独不要last\r\n    hashMap.forEach((node,index) => {\r\n        const $li = $(`\r\n        <li>\r\n            <div class=\"site\">\r\n                <div class=\"logo\">${node.logo[0]}</div>\r\n                <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                <div class=\"close\">\r\n                    <svg class=\"icon\">\r\n                        <use xlink:href=\"#icon-close\"></use>\r\n                    </svg>\r\n                </div>\r\n            </div>\r\n        </li>`).insertBefore($lastLi)\r\n        $li.on('click',(e)=>{\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click','.close',(e)=>{\r\n            e.stopPropagation()//阻止冒泡\r\n            console.log(hashMap);\r\n            hashMap.splice(index,1)// 删除数组中 index对应的元素\r\n            render()//重新渲染\r\n        })\r\n    })\r\n}\r\n\r\nrender()\r\n\r\n$('.addButton').on('click', () => {\r\n    let url = window.prompt('请输入网址')\r\n    if (url.indexOf('http') !== 0) {\r\n        url = 'https://' + url\r\n    }\r\n    hashMap.push({\r\n        logo: simplifyUrl(url)[0],\r\n        logoType: 'text',\r\n        url: url\r\n    })\r\n    render()\r\n})\r\n\r\nwindow.onbeforeunload = ()=>{ //关闭页面时，把hashMap存到localStorage\r\n    console.log('頁面要關閉了');\r\n    const string = JSON.stringify(hashMap)// 把对象变成字符串\r\n    localStorage.setItem('x',string) //存储在本地的，设置x的值为string\r\n}\r\n$(document).on('keypress',(e) =>{\r\n    // const key = e.key 相当于下面的\r\n    const {key} = e\r\n    for(let i = 0; i< hashMap.length;i++){\r\n        if(hashMap[i].logo.toLowerCase() === key){\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n"]}